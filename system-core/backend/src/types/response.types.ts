export interface ApiResponse<T = unknown> {
    success: boolean;
    data?: T;
    error?: {
        code: string;
        message: string;
    };
}

export enum ApiErrorCode {
    // Existing error codes
    INVALID_STATE = 'INVALID_STATE',
    INVALID_PROVIDER = 'INVALID_PROVIDER',
    MISSING_DATA = 'MISSING_DATA',
    DATABASE_ERROR = 'DATABASE_ERROR',
    AUTH_FAILED = 'AUTH_FAILED',
    USER_EXISTS = 'USER_EXISTS',
    USER_NOT_FOUND = 'USER_NOT_FOUND',
    MISSING_EMAIL = 'MISSING_EMAIL',
    INVALID_DETAILS = 'INVALID_DETAILS',
    
    // New error codes for permissions and API access
    PERMISSION_DENIED = 'PERMISSION_DENIED',
    INSUFFICIENT_SCOPE = 'INSUFFICIENT_SCOPE',
    INVALID_REQUEST = 'INVALID_REQUEST',
    INVALID_SERVICE = 'INVALID_SERVICE',
    INVALID_SCOPE = 'INVALID_SCOPE',
    SERVER_ERROR = 'SERVER_ERROR',
    
    // API resource errors
    RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',
    RESOURCE_EXISTS = 'RESOURCE_EXISTS',
    RESOURCE_DELETED = 'RESOURCE_DELETED',
    
    // Rate limiting and quota errors
    RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
    QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',
    
    // Connection errors
    SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
    CONNECTION_ERROR = 'CONNECTION_ERROR',
    TIMEOUT_ERROR = 'TIMEOUT_ERROR',
    
    // Token errors
    TOKEN_EXPIRED = 'TOKEN_EXPIRED',
    TOKEN_INVALID = 'TOKEN_INVALID',
    TOKEN_REVOKED = 'TOKEN_REVOKED',
    
    // Validation errors
    VALIDATION_ERROR = 'VALIDATION_ERROR',
    INVALID_PARAMETERS = 'INVALID_PARAMETERS'
}